//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
namespace ContactsDirect.Data.DB
{
    #region Contexts

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class contactsdirectEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new contactsdirectEntities object using the connection string found in the 'contactsdirectEntities' section of the application configuration file.
        /// </summary>
        public contactsdirectEntities() : base("name=contactsdirectEntities", "contactsdirectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new contactsdirectEntities object.
        /// </summary>
        public contactsdirectEntities(string connectionString) : base(connectionString, "contactsdirectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new contactsdirectEntities object.
        /// </summary>
        public contactsdirectEntities(EntityConnection connection) : base(connection, "contactsdirectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lenstype> lenstypes
        {
            get
            {
                if ((_lenstypes == null))
                {
                    _lenstypes = base.CreateObjectSet<lenstype>("lenstypes");
                }
                return _lenstypes;
            }
        }
        private ObjectSet<lenstype> _lenstypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<optionalproduct> optionalproducts
        {
            get
            {
                if ((_optionalproducts == null))
                {
                    _optionalproducts = base.CreateObjectSet<optionalproduct>("optionalproducts");
                }
                return _optionalproducts;
            }
        }
        private ObjectSet<optionalproduct> _optionalproducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<paymentmethod> paymentmethods
        {
            get
            {
                if ((_paymentmethods == null))
                {
                    _paymentmethods = base.CreateObjectSet<paymentmethod>("paymentmethods");
                }
                return _paymentmethods;
            }
        }
        private ObjectSet<paymentmethod> _paymentmethods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<prescriptiontype> prescriptiontypes
        {
            get
            {
                if ((_prescriptiontypes == null))
                {
                    _prescriptiontypes = base.CreateObjectSet<prescriptiontype>("prescriptiontypes");
                }
                return _prescriptiontypes;
            }
        }
        private ObjectSet<prescriptiontype> _prescriptiontypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<subscriptionlength> subscriptionlengths
        {
            get
            {
                if ((_subscriptionlengths == null))
                {
                    _subscriptionlengths = base.CreateObjectSet<subscriptionlength>("subscriptionlengths");
                }
                return _subscriptionlengths;
            }
        }
        private ObjectSet<subscriptionlength> _subscriptionlengths;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lenstypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolenstypes(lenstype lenstype)
        {
            base.AddObject("lenstypes", lenstype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the optionalproducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTooptionalproducts(optionalproduct optionalproduct)
        {
            base.AddObject("optionalproducts", optionalproduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the paymentmethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopaymentmethods(paymentmethod paymentmethod)
        {
            base.AddObject("paymentmethods", paymentmethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the prescriptiontypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToprescriptiontypes(prescriptiontype prescriptiontype)
        {
            base.AddObject("prescriptiontypes", prescriptiontype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the subscriptionlengths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosubscriptionlengths(subscriptionlength subscriptionlength)
        {
            base.AddObject("subscriptionlengths", subscriptionlength);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContactsDirectModel", Name="lenstype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lenstype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lenstype object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static lenstype Createlenstype(global::System.Int32 id)
        {
            lenstype lenstype = new lenstype();
            lenstype.id = id;
            return lenstype;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String typename
        {
            get
            {
                return _typename;
            }
            set
            {
                OntypenameChanging(value);
                ReportPropertyChanging("typename");
                _typename = StructuralObject.SetValidValue(value, true, "typename");
                ReportPropertyChanged("typename");
                OntypenameChanged();
            }
        }
        private global::System.String _typename;
        partial void OntypenameChanging(global::System.String value);
        partial void OntypenameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContactsDirectModel", Name="optionalproduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class optionalproduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new optionalproduct object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static optionalproduct Createoptionalproduct(global::System.Int32 id)
        {
            optionalproduct optionalproduct = new optionalproduct();
            optionalproduct.id = id;
            return optionalproduct;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String product
        {
            get
            {
                return _product;
            }
            set
            {
                OnproductChanging(value);
                ReportPropertyChanging("product");
                _product = StructuralObject.SetValidValue(value, true, "product");
                ReportPropertyChanged("product");
                OnproductChanged();
            }
        }
        private global::System.String _product;
        partial void OnproductChanging(global::System.String value);
        partial void OnproductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value, "amount");
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Int32> _amount;
        partial void OnamountChanging(Nullable<global::System.Int32> value);
        partial void OnamountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContactsDirectModel", Name="paymentmethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class paymentmethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new paymentmethod object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static paymentmethod Createpaymentmethod(global::System.Int32 id)
        {
            paymentmethod paymentmethod = new paymentmethod();
            paymentmethod.id = id;
            return paymentmethod;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> method
        {
            get
            {
                return _method;
            }
            set
            {
                OnmethodChanging(value);
                ReportPropertyChanging("method");
                _method = StructuralObject.SetValidValue(value, "method");
                ReportPropertyChanged("method");
                OnmethodChanged();
            }
        }
        private Nullable<global::System.Int32> _method;
        partial void OnmethodChanging(Nullable<global::System.Int32> value);
        partial void OnmethodChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContactsDirectModel", Name="prescriptiontype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class prescriptiontype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new prescriptiontype object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static prescriptiontype Createprescriptiontype(global::System.Int32 id)
        {
            prescriptiontype prescriptiontype = new prescriptiontype();
            prescriptiontype.id = id;
            return prescriptiontype;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prescription
        {
            get
            {
                return _prescription;
            }
            set
            {
                OnprescriptionChanging(value);
                ReportPropertyChanging("prescription");
                _prescription = StructuralObject.SetValidValue(value, true, "prescription");
                ReportPropertyChanged("prescription");
                OnprescriptionChanged();
            }
        }
        private global::System.String _prescription;
        partial void OnprescriptionChanging(global::System.String value);
        partial void OnprescriptionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContactsDirectModel", Name="subscriptionlength")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class subscriptionlength : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new subscriptionlength object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static subscriptionlength Createsubscriptionlength(global::System.Int32 id)
        {
            subscriptionlength subscriptionlength = new subscriptionlength();
            subscriptionlength.id = id;
            return subscriptionlength;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> months
        {
            get
            {
                return _months;
            }
            set
            {
                OnmonthsChanging(value);
                ReportPropertyChanging("months");
                _months = StructuralObject.SetValidValue(value, "months");
                ReportPropertyChanged("months");
                OnmonthsChanged();
            }
        }
        private Nullable<global::System.Int32> _months;
        partial void OnmonthsChanging(Nullable<global::System.Int32> value);
        partial void OnmonthsChanged();

        #endregion

    }

    #endregion

}
